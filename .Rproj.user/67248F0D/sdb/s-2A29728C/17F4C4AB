{
    "collab_server" : "",
    "contents" : "rm(list = ls())\n\n## Load libraries\nlibrary(\"googleway\")\nlibrary(\"gepaf\")\nlibrary(\"sp\")\nlibrary('raster')\nlibrary('ggplot2')\nlibrary('geosphere')\n\n#setwd(\"/home/james/mounts/botanix-botanixg/Projects/WalthamForest/Modelling/re_sampling/\")\n\nexposure_routes <- read.csv('exposure_journeys.csv',\n                            stringsAsFactors = F)\n\nexposure_routes[exposure_routes$via_array == '',]$via_array <- NA\n\nfor (i in 1:nrow(exposure_routes)) {\n\n  \n# Journey parameters\nstart_lat         <- exposure_routes[i,]$start_lat\nstart_lon         <- exposure_routes[i,]$start_lon\nif (!is.na(exposure_routes[i,]$via_array)) {via_array         <- as.list(strsplit(as.character(exposure_routes[i,]$via_array), \";\")[[1]]) } else {via_array <- NA}\nend_lat           <- exposure_routes[i,]$end_lat\nend_lon           <- exposure_routes[i,]$end_lon\nmode              <- as.character(exposure_routes[i,]$mode)\nstart_time        <- Sys.time() + 1000\nseggregated       <- exposure_routes[i,]$seggregated\n\n## take account of where in the road the journey is taking place\nif (mode == 'walk')                           {offset <- 6}\nif (mode == 'bicycle' & seggregated == 'no')  {offset <- 2}\nif (mode == 'bicycle' & seggregated == 'yes') {offset <- 4}\n\n\n# EPSG strings we might need\nlatlong                 <- \"+init=epsg:4326\"\nukgrid                  <- \"+init=epsg:27700\"\ngoogle_projected        <- \"+init=epsg:3857 +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\"\n\n# Take the start/end data and get a route from Google\nif ('walk' %in% mode)     { source(\"routing/walking.R\") }\nif ('bicycle' %in% mode)  { source(\"routing/cycling.R\") }\n\nrm(start_lat, start_lon, end_lat, end_lon, via_array)\n\nif ('walk' %in% mode) {\n  result <- walk_result\n  rm(walk_result)\n  duration <- walk_duration\n  rm(walk_duration)\n} else {\n  result <- cycle_result\n  rm(cycle_result)\n  duration <- cycle_duration\n  rm(cycle_duration)\n}\n\n##### In here is where we calculate the offset for where the journey is taking place compared to the centre of the road\n\nfor (i in 2:nrow(result)) {\n  \n  \n}\n\nbearing(result[2,], result[3,])\n\n\n#####\n\ncoordinates(result) <- ~lon + lat\nproj4string(result) = CRS(latlong)\nresult <- spTransform(result, ukgrid)\n\n## This makes a spatialline from the points for the result\nx <- lapply(split(result, result$id), function(x) Lines(list(Line(coordinates(x))), result$id[1L]))\nlines <- SpatialLines(x)\ndata <- data.frame(id = unique(result$id))\nrownames(data) <- data$id\nresult <- SpatialLinesDataFrame(lines, data)\nproj4string(result) = CRS(ukgrid)\nrm(x, lines, data)\n\n\n## How many minutes long was the bicycle and walk journeys\n\ntimeslots                <- data.frame(id = unique(result$id), time = seq.POSIXt(start_time, start_time + duration, \"min\"))\n\n## Now want to split the line into a point per minute\n\nresult                   <- data.frame(spsample(result, \n                                                nrow(timeslots),\n                                                type=\"regular\"))\n\n## Now some harmonisation stuff to get the car, walk and bus all the same format so can join them together\nresult$id                 <- exposure_routes[i,]$journey_id\nresult$mode               <- mode\nresult$line               <- NA\nresult                    <- cbind(result, timeslots)\nresult                    <- result[,c('id', 'mode', 'line', 'time', 'lon', 'lat')]\ncoordinates(result)       <- ~lon + lat\nproj4string(result)       <- CRS(ukgrid)\n\n\n# Now get our pollutant files\n\n## 2013 concentration maps\nwf_2013_no2              <- raster('air_quality/no2_2013.asc')\ncrs(wf_2013_no2)         <- CRS(ukgrid)\nwf_2013_nox              <- raster('air_quality/nox_2013.asc')\ncrs(wf_2013_nox)         <- CRS(ukgrid)\nwf_2013_pm10             <- raster('air_quality/pm10_2013.asc')\ncrs(wf_2013_pm10)        <- CRS(ukgrid)\nwf_2013_pm25             <- raster('air_quality/pm25_2013.asc')\ncrs(wf_2013_pm25)        <- CRS(ukgrid)\n\n## 2021 concentration maps without schemes\nwf_2021_no2              <- raster('air_quality/no2_2021.asc')\ncrs(wf_2021_no2)         <- CRS(ukgrid)\nwf_2021_nox              <- raster('air_quality/nox_2021.asc')\ncrs(wf_2021_nox)         <- CRS(ukgrid)\nwf_2021_pm10             <- raster('air_quality/pm10_2021.asc')\ncrs(wf_2021_pm10)        <- CRS(ukgrid)\nwf_2021_pm25             <- raster('air_quality/pm25_2021.asc')\ncrs(wf_2021_pm25)        <- CRS(ukgrid)\n\n## 2021 concentration maps with schemes\nwf_2021_no2_s            <- raster('air_quality/no2_2021.asc')\ncrs(wf_2021_no2_s)       <- CRS(ukgrid)\nwf_2021_nox_s            <- raster('air_quality/nox_2021.asc')\ncrs(wf_2021_nox_s)       <- CRS(ukgrid)\nwf_2021_pm10_s           <- raster('air_quality/pm10_2021.asc')\ncrs(wf_2021_pm10_s)      <- CRS(ukgrid)\nwf_2021_pm25_s           <- raster('air_quality/pm25_2021.asc')\ncrs(wf_2021_pm25_s)      <- CRS(ukgrid)\n\nrm(timeslots, duration, start_time )\n\n# Extract the concentrations from the Raster files\n\n# 2013\nresult@data$no2_2013           <- extract(wf_2013_no2, result@coords)\nresult@data$pm25_2013          <- extract(wf_2013_pm25, result@coords)\nresult@data$pm10_2013          <- extract(wf_2013_pm10, result@coords)\nresult@data$nox_2013           <- extract(wf_2013_nox, result@coords)\n\n# 2021 without scheme\nresult@data$no2_2021           <- extract(wf_2021_no2, result@coords)\nresult@data$pm25_2021          <- extract(wf_2021_pm25, result@coords)\nresult@data$pm10_2021          <- extract(wf_2021_pm10, result@coords)\nresult@data$nox_2021           <- extract(wf_2021_nox, result@coords)\n\n# 2021 with scheme\nresult@data$no2_2021_s         <- extract(wf_2021_no2, result@coords)\nresult@data$pm25_2021_s        <- extract(wf_2021_pm25, result@coords)\nresult@data$pm10_2021_se       <- extract(wf_2021_pm10, result@coords)\nresult@data$nox_2021_s         <- extract(wf_2021_nox, result@coords)\n\n## Calculate some cumulative exposure data for each pollutant by transport mode\n\n# 2013\nresult@data$cumulative_no2_2013  <- cumsum(result@data$no2_2013)\nresult@data$cumulative_pm25_2013 <- cumsum(result@data$pm25_2013)\nresult@data$cumulative_pm10_2013 <- cumsum(result@data$pm10_2013)\nresult@data$cumulative_nox_2013  <- cumsum(result@data$nox_2013)\n\n# 2021 without scheme\nresult@data$cumulative_no2_2021  <- cumsum(result@data$no2_2021)\nresult@data$cumulative_pm25_2021 <- cumsum(result@data$pm25_2021)\nresult@data$cumulative_pm10_2021 <- cumsum(result@data$pm10_2021)\nresult@data$cumulative_nox_2021  <- cumsum(result@data$nox_2021)\n\n# 2021 with scheme\nresult@data$cumulative_no2_2021_s  <- cumsum(result@data$no2_2021_s)\nresult@data$cumulative_pm25_2021_s <- cumsum(result@data$pm25_2021_s)\nresult@data$cumulative_pm10_2021_s <- cumsum(result@data$pm10_2021_s)\nresult@data$cumulative_nox_2021_s  <- cumsum(result@data$nox_2021_S)\n\n## Put results back into the starting table\nexposure_routes[i,'mean_no2_2013']       <- mean(result@data$no2_2013)\nexposure_routes[i,'mean_pm25_2013']      <- mean(result@data$pm25_2013)\nexposure_routes[i,'mean_pm10_2013']      <- mean(result@data$pm10_2013)\nexposure_routes[i,'mean_nox_2013']       <- mean(result@data$nox_2013)\n\nexposure_routes[i,'mean_no2_2021']       <- mean(result@data$no2_2021)\nexposure_routes[i,'mean_pm25_2021']      <- mean(result@data$pm25_2021)\nexposure_routes[i,'mean_pm10_2021']      <- mean(result@data$pm10_2021)\nexposure_routes[i,'mean_nox_2021']       <- mean(result@data$nox_2021)\n\nexposure_routes[i,'mean_no2_2021_s']       <- mean(result@data$no2_2021_s)\nexposure_routes[i,'mean_pm25_2021_s']      <- mean(result@data$pm25_2021_s)\nexposure_routes[i,'mean_pm10_2021_s']      <- mean(result@data$pm10_2021_s)\nexposure_routes[i,'mean_nox_2021_s']       <- mean(result@data$nox_2021_s)\n\nexposure_routes[i,'total_no2_2013']       <- mean(result@data$cumulative_no2_2013)\nexposure_routes[i,'total_pm25_2013']      <- mean(result@data$cumulative_pm25_2013)\nexposure_routes[i,'total_pm10_2013']      <- mean(result@data$cumulative_pm10_2013)\nexposure_routes[i,'total_nox_2013']       <- mean(result@data$cumulative_nox_2013)\n\nexposure_routes[i,'total_no2_2021']       <- mean(result@data$cumulative_no2_2021)\nexposure_routes[i,'total_pm25_2021']      <- mean(result@data$cumulative_pm25_2021)\nexposure_routes[i,'total_pm10_2021']      <- mean(result@data$cumulative_pm10_2021)\nexposure_routes[i,'total_nox_2021']       <- mean(result@data$cumulative_nox_2021)\n\nexposure_routes[i,'total_no2_2021_s']       <- mean(result@data$cumulative_no2_2021_s)\nexposure_routes[i,'total_pm25_2021_s']      <- mean(result@data$cumulative_pm25_2021_s)\nexposure_routes[i,'total_pm10_2021_s']      <- mean(result@data$cumulative_pm10_2021_s)\nexposure_routes[i,'total_nox_2021_s']       <- mean(result@data$cumulative_nox_2021_s)\n\n}",
    "created" : 1525949560045.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1054256238",
    "id" : "17F4C4AB",
    "lastKnownWriteTime" : 1525968932,
    "last_content_update" : 1525968932239,
    "path" : "~/GitHub/waltham_forest/make_exposure.R",
    "project_path" : "make_exposure.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}